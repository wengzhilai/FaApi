<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FaApi</name>
    </assembly>
    <members>
        <member name="T:FaApi.Comon.AppSettingsManager">
            <summary>
            读取AppSetting文件
            </summary>
        </member>
        <member name="F:FaApi.Comon.AppSettingsManager.MongoSettings">
            <summary>
            获取mongodb设置
            </summary>
        </member>
        <member name="F:FaApi.Comon.AppSettingsManager.JwtSettings">
            <summary>
            获取jwt配置
            </summary>
            <returns></returns>
        </member>
        <member name="T:FaApi.Comon.JwtSettings">
            <summary>
            jwt配置
            </summary>
        </member>
        <member name="P:FaApi.Comon.JwtSettings.Issuer">
            <summary>
            证书颁发者
            </summary>
        </member>
        <member name="P:FaApi.Comon.JwtSettings.Audience">
            <summary>
            允许使用的角色
            </summary>
        </member>
        <member name="P:FaApi.Comon.JwtSettings.SecretKey">
            <summary>
            加密字符串
            </summary>
        </member>
        <member name="T:FaApi.Comon.ErrorHandlingMiddleware">
            <summary>
            处理出错的中间件
            </summary>
        </member>
        <member name="M:FaApi.Comon.ErrorHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            处理出错的中间件
            </summary>
            <param name="next"></param>
        </member>
        <member name="M:FaApi.Comon.ErrorHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:FaApi.Comon.ErrorHandlingExtensions">
            <summary>
            扩展方法
            </summary>
        </member>
        <member name="M:FaApi.Comon.ErrorHandlingExtensions.UseErrorHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            扩展方法
            </summary>
            <param name="builder"></param>
            <returns></returns>
        </member>
        <member name="T:FaApi.Comon.HttpHeaderOperation">
            <summary>
            
            </summary>
        </member>
        <member name="M:FaApi.Comon.HttpHeaderOperation.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="context"></param>
        </member>
        <member name="M:FaApi.Comon.MongodbClient`1.MongodbInfoClient">
            <summary>
            获取mongodb实例
            </summary>
            <param name="host">连接字符串，库，表</param>
            <returns></returns>
        </member>
        <member name="P:FaApi.Comon.MongodbHost.Connection">
            <summary>
            连接字符串
            </summary>
        </member>
        <member name="P:FaApi.Comon.MongodbHost.DataBase">
            <summary>
            库
            </summary>
        </member>
        <member name="P:FaApi.Comon.MongodbHost.Table">
            <summary>
            表
            </summary>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.Add(`0)">
            <summary>
            添加一条数据
            </summary>
            <param name="t">添加的实体</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.AddAsync(`0)">
            <summary>
            异步添加一条数据
            </summary>
            <param name="t">添加的实体</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.InsertMany(System.Collections.Generic.List{`0})">
            <summary>
            批量插入
            </summary>
            <param name="t">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.InsertManyAsync(System.Collections.Generic.List{`0})">
            <summary>
            异步批量插入
            </summary>
            <param name="t">实体集合</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.Update(`0,System.String)">
            <summary>
            修改一条数据
            </summary>
            <param name="t">添加的实体</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.UpdateAsync(`0,System.String)">
            <summary>
            异步修改一条数据
            </summary>
            <param name="t">添加的实体</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.UpdateManay(System.Collections.Generic.Dictionary{System.String,System.String},MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            批量修改数据
            </summary>
            <param name="dic">要修改的字段</param>
            <param name="filter">修改条件</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.UpdateManayAsync(System.Collections.Generic.Dictionary{System.String,System.String},MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            异步批量修改数据
            </summary>
            <param name="dic">要修改的字段</param>
            <param name="filter">修改条件</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.Delete(System.String)">
            <summary>
            删除一条数据
            </summary>
            <param name="id">objectId</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.DeleteAsync(System.String)">
            <summary>
            异步删除一条数据
            </summary>
            <param name="id">objectId</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.DeleteMany(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            删除一条数据
            </summary>
            <param name="filter">删除的条件</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.DeleteManyAsync(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            异步删除多条数据
            </summary>
            <param name="filter">删除的条件</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.Count(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            根据条件获取总数
            </summary>
            <param name="filter">条件</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.CountAsync(MongoDB.Driver.FilterDefinition{`0})">
            <summary>
            异步根据条件获取总数
            </summary>
            <param name="filter">条件</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.FindOne(System.String,System.String[])">
            <summary>
            根据id查询一条数据
            </summary>
            <param name="id">objectid</param>
            <param name="field">要查询的字段，不写时查询全部</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.FindOneAsync(System.String,System.String[])">
            <summary>
            异步根据id查询一条数据
            </summary>
            <param name="id">objectid</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.FindList(MongoDB.Driver.FilterDefinition{`0},System.String[],MongoDB.Driver.SortDefinition{`0})">
            <summary>
            查询集合
            </summary>
            <param name="filter">查询条件</param>
            <param name="field">要查询的字段,不写时查询全部</param>
            <param name="sort">要排序的字段</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.FindListAsync(MongoDB.Driver.FilterDefinition{`0},System.String[],MongoDB.Driver.SortDefinition{`0})">
            <summary>
            异步查询集合
            </summary>
            <param name="filter">查询条件</param>
            <param name="field">要查询的字段,不写时查询全部</param>
            <param name="sort">要排序的字段</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.FindListByPage(MongoDB.Driver.FilterDefinition{`0},System.Int32,System.Int32,System.Int64@,System.String[],MongoDB.Driver.SortDefinition{`0})">
            <summary>
            分页查询集合
            </summary>
            <param name="filter">查询条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页容量</param>
            <param name="count">总条数</param>
            <param name="field">要查询的字段,不写时查询全部</param>
            <param name="sort">要排序的字段</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Comon.TMongodbHelper`1.FindListByPageAsync(MongoDB.Driver.FilterDefinition{`0},System.Int32,System.Int32,System.String[],MongoDB.Driver.SortDefinition{`0})">
            <summary>
            异步分页查询集合
            </summary>
            <param name="filter">查询条件</param>
            <param name="pageIndex">当前页</param>
            <param name="pageSize">页容量</param>
            <param name="field">要查询的字段,不写时查询全部</param>
            <param name="sort">要排序的字段</param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Unit.RuntimeHelper.GetAllAssemblies">
            <summary>
            获取项目程序集，排除所有的系统程序集(Microsoft.***、System.***等)、Nuget下载包
            </summary>
            <returns></returns>
        </member>
        <member name="M:FaApi.Unit.RuntimeHelper.GetTypesByAssembly(System.String)">
            <summary>
            根据AssemblyName获取所有的类
            </summary>
            <param name="assemblyName"></param>
            <returns></returns>
        </member>
        <member name="M:FaApi.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            让第三方容器接管Core 的默认DI
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
    </members>
</doc>
